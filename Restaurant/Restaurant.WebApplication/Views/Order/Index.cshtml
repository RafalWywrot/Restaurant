@model Restaurant.WebApplication.Models.OrdersViewModel

@{
    ViewBag.Title = "Index";
}
@if (Model.ActiveOrder.Status == false)
{
    <div class="table-container">
        <div>
            <span class="table-description">Data zamówienia:</span>
            <span>
                @Html.HiddenFor(x => Model.ActiveOrder.Id, new { @id = "mainOrderId" })
                @Model.ActiveOrder.OrderDate
            </span>
            <input type="button" value="Zatwierdź" class="btn btn-success confirm-order button-confirm-order" />
        </div>
    </div>

    <div class="table-container">
        <div class="form-title">
            <span>Szczegóły zamówienia</span>
        </div>
        <table class="table table-condensed">
            <thead>
                <tr>
                    <th style="padding-left: 20px;">
                        @Html.Name("Nazwa")
                    </th>
                    <th>
                        @Html.Name("Ilość")
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var orderItem in Model.ActiveOrder.OrderItems)
                {
                    <tr style="border: none;">
                        @Html.HiddenFor(x => orderItem.Id, new { @class = "orderItemId" })
                        <td style="padding-left: 20px;">
                            @Html.DisplayFor(modelItem => orderItem.Menu.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => orderItem.Quantity)
                        </td>
                        <td>
                            @if (Model.ActiveOrder.Status == false)
                            {
                                <input type="button" value="Usuń" class="btn btn-danger remove-order-item" />
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="table-container">
        <div class="form-title">
            <span>Brak aktywnych zamówień</span>
        </div>
    </div>
}
    <div class="table-container">
        <div>
            <span class="table-description">Historia zamówień:</span>            
        </div>
    </div>
@if (Model.HistoryOrders.Count > 0)
{
    foreach (var order in Model.HistoryOrders)
    {
        <div class="table-container">
            <div>
                <span class="table-description">Data zamówienia:</span>
                <span>
                    @Html.HiddenFor(x => order.Id, new { @id = "mainOrderId" })
                    @order.OrderDate
                </span>
            </div>
        </div>

        <div class="table-container">
            <div class="form-title">
                <span>Szczegóły zamówienia</span>
            </div>
            <table class="table table-condensed">
                <thead>
                    <tr>
                        <th style="padding-left: 20px;">
                            @Html.Name("Nazwa")
                        </th>
                        <th>
                            @Html.Name("Ilość")
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var orderItem in order.OrderItems)
                    {
                        <tr style="border: none;">
                            @Html.HiddenFor(x => orderItem.Id, new { @class = "orderItemId" })
                            <td style="padding-left: 20px;">
                                @Html.DisplayFor(modelItem => orderItem.Menu.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => orderItem.Quantity)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
}
else
{
    <div class="table-container">
        <div class="form-title">
            <span>Brak historii zamówień</span>
        </div>
    </div>
}

@*<tr>
                @Html.HiddenFor(x => item.Id, new { @class = "orderId" })
                <td>
                    @Html.DisplayFor(modelItem => Model.OrderDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PickupDate)
                </td>
                <td>
                    if (item.Status == false)
                    {
                        <input type="button" value="Zatwierdź" class="btn btn-success confirm-order" />
                    }
                    else
                    {
                        <input type="button" value="Usuń" class="btn btn-danger remove-order" />
                    }
                </td>
            </tr>

            <tr>
                <th style="padding-left: 20px;">
                    @Html.Name("Nazwa")
                </th>
                <th>
                    @Html.Name("Ilość")
                </th>
                <th></th>
            </tr>
            foreach (var orderItem in item.OrderItems)
            {
                <tr style="border: none;">
                    @Html.HiddenFor(x => orderItem.Id, new { @class = "orderItemId" })
                    <td style="padding-left: 20px;">
                        @Html.DisplayFor(modelItem => orderItem.Menu.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => orderItem.Quantity)
                    </td>

                    <td>
                        if (item.Status == false)
                        {
                            <input type="button" value="Usuń" class="btn btn-danger remove-order-item" />
                        }
                    </td>
                </tr>
        }
    </table>*@

@section Scripts {
    <script>
        $(".remove-order").click(function () {
            var orderId = $("#mainOrderId").val();
            var options =
            {
                DeclineButtonClasses: "btn btn-default",
                ConfimButtonClasses: "btn btn-default margin-left-lg"
            };
            var confirmDialog = new ConfirmDialog(options);
            confirmDialog.ShowDialog(
                "Potwierdz usuniécie zamówienia",
                "Czy chcesz usunąć to zamówienie?",
                "Yes",
                "No",
                function () {
                    $.ajax({
                        url: '@Url.Action("Cancel", "Order")',
                        type: "POST",
                        contentType: 'application/json',
                        datatype: 'json',
                        data: JSON.stringify({
                            'orderId': orderId
                        }),
                        success: function (response) { // remove buttons and replace by message response by server
                            if (response) {
                                location.reload();
                            }
                            else {
                                alert('no response');
                            }
                        },
                        error: function (xhr) { alert('big error') }
                    });
                },
                function () { },
            );
        });
    </script>
    <script>
        $(".confirm-order").click(function () {
            var orderId = $("#mainOrderId").val();
            var options =
            {
                DeclineButtonClasses: "btn btn-default",
                ConfimButtonClasses: "btn btn-default margin-left-lg"
            };
            var confirmDialog = new ConfirmDialog(options);
            confirmDialog.ShowDialog(
                "Potwierdz zamowienie",
                "Czy chcesz zatwierdzic to zamówienie?",
                "Yes",
                "No",
                function () {
                    $.ajax({
                        url: '@Url.Action("Confirm", "Order")',
                        type: "POST",
                        contentType: 'application/json',
                        datatype: 'json',
                        data: JSON.stringify({
                            'orderId': orderId
                        }),
                        success: function (response) { // remove buttons and replace by message response by server
                            if (response) {
                                location.reload();
                            }
                            else {
                                alert('no response');
                            }
                        },
                        error: function (xhr) { alert('big error') }
                    });
                },
                function () { },
            );
        });
    </script>
    <script>
        $(".remove-order-item").click(function () {
            var row = $(this).closest("tr");
            var options =
            {
                DeclineButtonClasses: "btn btn-default",
                ConfimButtonClasses: "btn btn-default margin-left-lg"
            };
            var confirmDialog = new ConfirmDialog(options);
            confirmDialog.ShowDialog(
                "text 1",
                "Content",
                "Yes",
                "No",
                function () {
                    $.ajax({
                        url: '@Url.Action("Remove", "Order")',
                        type: "POST",
                        contentType: 'application/json',
                        datatype: 'json',
                        data: JSON.stringify({
                            'orderItemId': row.find('.orderItemId').val()
                        }),
                        success: function (response) { // remove buttons and replace by message response by server
                            if (response) {
                                if (row.siblings().length > 0) {
                                    location.reload();
                                }
                                else {
                                    row.remove();
                                }
                            }
                            else {
                                alert('no response');
                            }
                        },
                        error: function (xhr) { alert('big error') }
                    });
                },
                function () { }
            );
    });
    </script>
}

